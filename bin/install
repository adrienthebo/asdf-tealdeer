#!/usr/bin/env bash

set -euo pipefail

SCRIPT_ROOT="$(cd "$(dirname "$0")"; pwd)"
# shellcheck disable=SC1090
source "${SCRIPT_ROOT}/../lib/utils.sh"

function install_tealdeer() {
  # local install_type=$1
  local version=$2
  local install_path=$3
  local file="tldr"
  local bin_install_path="${install_path}/bin"
  local completion_install_path="${install_path}/completions"
  local bin_path="${bin_install_path}/${file}"

  local platform
  case "$(uname)" in
    Darwin)
      platform="macos"
      target="x86_64"
      ;;

    Linux)
      platform="linux"

      case "$(uname -m)" in
        armv5* | armv6*) target="arm-musleabi"     ;;
        armv7*)          target="armv7-musleabihf" ;;
        i686*)           target="i686-musl"        ;;
        x86_64*)         target="x86_64-musl"      ;;

        aarch64* | arm64 | *)
          #architecture="arm64"
          echo "Unsupported architecture '$(uname -m)'" >&2
          exit 1
          ;;
      esac

      ;;

    *)
      echo "Unsupported platform $(uname)" >&2
      exit 1
      ;;
  esac


  mkdir -p "$bin_install_path"
  mkdir -p "$completion_install_path"

  local bin_target="${platform}-${target}"
  local release_url="https://github.com/dbrgn/tealdeer/releases/download/v${version}/"
  local download_url="${release_url}/tealdeer-${bin_target}"

  echo "Downloading tealdeer from ${release_url}"

  local tempdir="${TMPDIR:-"$(mktemp -d)"}"

  curl -sL "$download_url" > "$tempdir/${file}"

  mv "${tempdir}/${file}" "$bin_path"
  chmod +x "$bin_path"

  for completion in completions_{bash,fish,zsh}; do
    curl -sL "$release_url/${completion}" > "$tempdir/${completion}"
    mv "${tempdir}/${completion}" "${completion_install_path}/${completion}"
  done
}

install_tealdeer "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
# vim: ai ts=2 sw=2 et sts=2 ft=sh
